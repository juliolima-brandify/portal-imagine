#!/usr/bin/env node

/**
 * Script para testar a p√°gina de usu√°rios
 */

const { createClient } = require('@supabase/supabase-js')
require('dotenv').config({ path: '.env.local' })

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Vari√°veis de ambiente do Supabase n√£o encontradas')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function testUsersPage() {
  console.log('üîç Testando P√°gina de Usu√°rios')
  console.log('==============================')
  
  try {
    // Testar conex√£o com Supabase
    console.log('\n1. üîó Testando conex√£o com Supabase...')
    const { data: { user }, error: authError } = await supabase.auth.getUser()
    
    if (authError) {
      console.log('‚ö†Ô∏è Erro de autentica√ß√£o:', authError.message)
    } else {
      console.log('‚úÖ Conex√£o com Supabase OK')
    }
    
    // Testar carregamento de perfis
    console.log('\n2. üë• Testando carregamento de perfis...')
    const { data: profiles, error: profilesError } = await supabase
      .from('profiles')
      .select('*')
      .order('created_at', { ascending: false })
    
    if (profilesError) {
      console.error('‚ùå Erro ao carregar perfis:', profilesError.message)
    } else {
      console.log(`‚úÖ Perfis carregados: ${profiles?.length || 0}`)
      
      if (profiles && profiles.length > 0) {
        console.log('\nüìã Perfis encontrados:')
        profiles.forEach((profile, index) => {
          console.log(`   ${index + 1}. ${profile.name} (${profile.email}) - ${profile.role}`)
        })
      }
    }
    
    // Testar estrutura da tabela profiles
    console.log('\n3. üóÇÔ∏è Testando estrutura da tabela profiles...')
    const { data: sampleProfile } = await supabase
      .from('profiles')
      .select('*')
      .limit(1)
      .single()
    
    if (sampleProfile) {
      console.log('‚úÖ Estrutura da tabela profiles:')
      console.log('   Colunas dispon√≠veis:', Object.keys(sampleProfile))
    } else {
      console.log('‚ö†Ô∏è Nenhum perfil encontrado para testar estrutura')
    }
    
    console.log('\n‚úÖ Teste da p√°gina de usu√°rios conclu√≠do!')
    
  } catch (error) {
    console.error('‚ùå Erro inesperado:', error.message)
  }
}

testUsersPage()
