#!/usr/bin/env node

/**
 * Script para testar sincroniza√ß√£o de doa√ß√µes com Supabase
 */

const { createClient } = require('@supabase/supabase-js')
require('dotenv').config({ path: '.env.local' })

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Vari√°veis de ambiente do Supabase n√£o encontradas')
  console.log('Verifique se .env.local est√° configurado corretamente')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function testDonationsSync() {
  console.log('üîç Testando Sincroniza√ß√£o de Doa√ß√µes com Supabase')
  console.log('================================================')
  
  try {
    // Testar conex√£o
    console.log('\n1. üîó Testando conex√£o com Supabase...')
    const { data: { user }, error: authError } = await supabase.auth.getUser()
    
    if (authError) {
      console.log('‚ö†Ô∏è N√£o autenticado (normal para teste)')
    } else {
      console.log('‚úÖ Usu√°rio autenticado:', user?.email)
    }
    
    // Testar tabela donations
    console.log('\n2. üìä Testando tabela donations...')
    const { data: donations, error: donationsError } = await supabase
      .from('donations')
      .select('*')
      .limit(5)
    
    if (donationsError) {
      console.error('‚ùå Erro ao acessar tabela donations:', donationsError.message)
      return
    }
    
    console.log(`‚úÖ Tabela donations acess√≠vel`)
    console.log(`üìà Total de doa√ß√µes encontradas: ${donations?.length || 0}`)
    
    if (donations && donations.length > 0) {
      console.log('\nüìã Primeiras doa√ß√µes:')
      donations.forEach((donation, index) => {
        console.log(`   ${index + 1}. ID: ${donation.id}, Valor: R$ ${donation.amount || 0}, Status: ${donation.status || 'N/A'}`)
      })
    }
    
    // Testar relacionamentos
    console.log('\n3. üîó Testando relacionamentos...')
    const { data: donationsWithRelations, error: relationsError } = await supabase
      .from('donations')
      .select(`
        *,
        projects:project_id (
          title
        ),
        profiles:donor_id (
          name,
          email
        )
      `)
      .limit(3)
    
    if (relationsError) {
      console.error('‚ùå Erro ao testar relacionamentos:', relationsError.message)
    } else {
      console.log('‚úÖ Relacionamentos funcionando')
      if (donationsWithRelations && donationsWithRelations.length > 0) {
        console.log('\nüìã Doa√ß√µes com relacionamentos:')
        donationsWithRelations.forEach((donation, index) => {
          console.log(`   ${index + 1}. Doador: ${donation.profiles?.name || 'N/A'}, Projeto: ${donation.projects?.title || 'N/A'}`)
        })
      }
    }
    
    // Testar inser√ß√£o de doa√ß√£o de teste
    console.log('\n4. ‚ûï Testando inser√ß√£o de doa√ß√£o de teste...')
    const testDonation = {
      amount: 100.00,
      status: 'completed',
      payment_method: 'PIX',
      transaction_id: `TEST-${Date.now()}`,
      donor_id: '00000000-0000-0000-0000-000000000000', // UUID fict√≠cio
      project_id: '00000000-0000-0000-0000-000000000000' // UUID fict√≠cio
    }
    
    const { data: insertedDonation, error: insertError } = await supabase
      .from('donations')
      .insert([testDonation])
      .select()
    
    if (insertError) {
      console.log('‚ö†Ô∏è Erro ao inserir doa√ß√£o de teste (pode ser RLS):', insertError.message)
    } else {
      console.log('‚úÖ Doa√ß√£o de teste inserida com sucesso')
      
      // Limpar doa√ß√£o de teste
      if (insertedDonation && insertedDonation[0]) {
        await supabase
          .from('donations')
          .delete()
          .eq('id', insertedDonation[0].id)
        console.log('üßπ Doa√ß√£o de teste removida')
      }
    }
    
    console.log('\n‚úÖ Teste de sincroniza√ß√£o conclu√≠do!')
    console.log('\nüìã Resumo:')
    console.log(`   - Conex√£o: ‚úÖ Funcionando`)
    console.log(`   - Tabela donations: ‚úÖ Acess√≠vel`)
    console.log(`   - Relacionamentos: ‚úÖ Funcionando`)
    console.log(`   - Total de doa√ß√µes: ${donations?.length || 0}`)
    
  } catch (error) {
    console.error('‚ùå Erro inesperado:', error.message)
  }
}

testDonationsSync()
