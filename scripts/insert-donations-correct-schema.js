#!/usr/bin/env node

/**
 * Script para inserir doa√ß√µes usando o schema correto da tabela donations
 */

const { createClient } = require('@supabase/supabase-js')
require('dotenv').config({ path: '.env.local' })

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Vari√°veis de ambiente do Supabase n√£o encontradas')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

// Doa√ß√µes usando o schema correto
const correctDonations = [
  {
    amount: 150.00,
    currency: 'BRL',
    status: 'completed',
    payment_method: 'PIX',
    anonymous: false,
    message: 'Doa√ß√£o para educa√ß√£o infantil',
    is_recurring: false
  },
  {
    amount: 75.50,
    currency: 'BRL',
    status: 'completed',
    payment_method: 'Cart√£o de Cr√©dito',
    anonymous: false,
    message: 'Apoio √† alimenta√ß√£o escolar',
    is_recurring: false
  },
  {
    amount: 200.00,
    currency: 'BRL',
    status: 'pending',
    payment_method: 'PIX',
    anonymous: true,
    message: 'Doa√ß√£o an√¥nima para biblioteca',
    is_recurring: false
  },
  {
    amount: 100.00,
    currency: 'BRL',
    status: 'completed',
    payment_method: 'Boleto',
    anonymous: false,
    message: 'Contribui√ß√£o para alimenta√ß√£o',
    is_recurring: false
  },
  {
    amount: 300.00,
    currency: 'BRL',
    status: 'failed',
    payment_method: 'Cart√£o de Cr√©dito',
    anonymous: false,
    message: 'Doa√ß√£o para educa√ß√£o infantil',
    is_recurring: false
  }
]

async function insertCorrectDonations() {
  console.log('üîç Inserindo Doa√ß√µes com Schema Correto')
  console.log('=====================================')
  
  try {
    // Limpar doa√ß√µes existentes
    console.log('\n1. üßπ Limpando doa√ß√µes existentes...')
    const { error: deleteError } = await supabase
      .from('donations')
      .delete()
      .neq('id', '00000000-0000-0000-0000-000000000000')
    
    if (deleteError) {
      console.log('‚ö†Ô∏è Erro ao limpar doa√ß√µes:', deleteError.message)
    } else {
      console.log('‚úÖ Doa√ß√µes existentes removidas')
    }
    
    // Inserir doa√ß√µes com schema correto
    console.log('\n2. ‚ûï Inserindo doa√ß√µes com schema correto...')
    const { data: insertedDonations, error: insertError } = await supabase
      .from('donations')
      .insert(correctDonations)
      .select()
    
    if (insertError) {
      console.error('‚ùå Erro ao inserir doa√ß√µes:', insertError.message)
      return
    }
    
    console.log('‚úÖ Doa√ß√µes inseridas com sucesso!')
    console.log(`üìà Total inserido: ${insertedDonations?.length || 0}`)
    
    // Verificar doa√ß√µes inseridas
    console.log('\n3. üîç Verificando doa√ß√µes inseridas...')
    const { data: allDonations, error: selectError } = await supabase
      .from('donations')
      .select('*')
      .order('created_at', { ascending: false })
    
    if (selectError) {
      console.error('‚ùå Erro ao verificar doa√ß√µes:', selectError.message)
    } else {
      console.log(`‚úÖ Total de doa√ß√µes na tabela: ${allDonations?.length || 0}`)
      
      if (allDonations && allDonations.length > 0) {
        console.log('\nüìã Doa√ß√µes inseridas:')
        allDonations.forEach((donation, index) => {
          const donorName = donation.anonymous ? 'Doador An√¥nimo' : 'Doador'
          console.log(`   ${index + 1}. ${donorName} - R$ ${donation.amount} - ${donation.status}`)
        })
      }
    }
    
    console.log('\n‚úÖ Doa√ß√µes inseridas com sucesso!')
    console.log('\nüìã Resumo:')
    console.log(`   - Doa√ß√µes inseridas: ${insertedDonations?.length || 0}`)
    console.log(`   - Total na tabela: ${allDonations?.length || 0}`)
    console.log('   - Status: ‚úÖ Pronto para teste na interface')
    
    console.log('\nüéØ Pr√≥ximos passos:')
    console.log('   1. Acesse: http://localhost:3000/admin/doacoes?demo_email=admin@institutoimagine.org')
    console.log('   2. Verifique se as doa√ß√µes aparecem na interface')
    console.log('   3. Teste os filtros e funcionalidades')
    
  } catch (error) {
    console.error('‚ùå Erro inesperado:', error.message)
  }
}

insertCorrectDonations()
